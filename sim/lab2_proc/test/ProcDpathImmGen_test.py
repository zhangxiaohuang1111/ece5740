#=========================================================================
# ProcDpathImmGen unit tests
#=========================================================================

from pymtl3 import *
from pymtl3.stdlib.test_utils import run_test_vector_sim

from lab2_proc.ProcDpathImmGen import ProcDpathImmGen

#-------------------------------------------------------------------------
# test I-type
#-------------------------------------------------------------------------

def test_immgen_i( cmdline_opts ):
  dut = ProcDpathImmGen()

  run_test_vector_sim( dut, [
    ('imm_type inst                                imm*'),
    [ 0,       0b11111111111100000000000000000000, 0b11111111111111111111111111111111],
    [ 0,       0b00000000000011111111111111111111, 0b00000000000000000000000000000000],
    [ 0,       0b01111111111100000000000000000000, 0b00000000000000000000011111111111],
    [ 0,       0b11111111111000000000000000000000, 0b11111111111111111111111111111110],
  ], cmdline_opts )

#-------------------------------------------------------------------------
# test S-type
#-------------------------------------------------------------------------

def test_immgen_s( cmdline_opts ):
  dut = ProcDpathImmGen()

  run_test_vector_sim( dut, [
    ('imm_type inst                                imm*'),
    [ 1,       0b01111110000000000000111110000000, 0b00000000000000000000011111111111],
    [ 1,       0b11111110000000000000111110000000, 0b11111111111111111111111111111111],
    [ 1,       0b01111110000001010000111110000000, 0b00000000000000000000011111111111],
    [ 1,       0b01111000000000000000111110000000, 0b00000000000000000000011110011111],
    [ 1,       0b10101010001010101010101010101010, 0b11111111111111111111101010110101],
    [ 1,       0b01111111111111111111000000000000, 0b00000000000000000000011111100000],
    [ 1,       0b00000001001101010111111110000000, 0b00000000000000000000000000011111],
    [ 1,       0b10000000000000000000000100000000, 0b11111111111111111111100000000010],  

        
  ], cmdline_opts )

#-------------------------------------------------------------------------
# test B-type
#-------------------------------------------------------------------------

def test_immgen_b( cmdline_opts ):
  dut = ProcDpathImmGen()

  run_test_vector_sim( dut, [
    ('imm_type inst                                imm*'),
    [ 2,       0b11111110000000000000111110000000, 0b11111111111111111111111111111110],
    [ 2,       0b00000001111111111111000001111111, 0b00000000000000000000000000000000],
    [ 2,       0b11000000000000000000111100000000, 0b11111111111111111111010000011110],
  ], cmdline_opts )



#-------------------------------------------------------------------------
# test U-type
#-------------------------------------------------------------------------

def test_immgen_u( cmdline_opts ):
  dut = ProcDpathImmGen()

  run_test_vector_sim( dut, [
    ('imm_type inst                                imm*'),
    [ 3,       0b11111111111111111111000000000000, 0b11111111111111111111000000000000],
    [ 3,       0b01010101010101010101000000000000, 0b01010101010101010101000000000000],
    [ 3,       0b11111111111111111111111111111111, 0b11111111111111111111000000000000],
    [ 3,       0b11111111111111111111010101010101, 0b11111111111111111111000000000000],
    [ 3,       0b11111111111111111111110010100111, 0b11111111111111111111000000000000],
    [ 3,       0b01111111111111111111000000000000, 0b01111111111111111111000000000000],
    [ 3,       0b10100011111010111010101111111111, 0b10100011111010111010000000000000],
  ], cmdline_opts )


#-------------------------------------------------------------------------
# test J-type
#-------------------------------------------------------------------------

def test_immgen_j( cmdline_opts ):
  dut = ProcDpathImmGen()

  run_test_vector_sim( dut, [
    ('imm_type inst                                imm*'),
    [ 4,       0b01111111111111111111000000000000, 0b00000000000011111111111111111110],
    [ 4,       0b11111111111111111111000000000000, 0b11111111111111111111111111111110],
    [ 4,       0b10000000000111111111000000000000, 0b11111111111111111111100000000000],
    [ 4,       0b01111111111011111111101010101010, 0b00000000000011111111011111111110],
    [ 4,       0b10101010101001010101111111111111, 0b11111111111101010101001010101010],
    [ 4,       0b00101010101001010101111111111111, 0b00000000000001010101001010101010],
    [ 4,       0b00000000000011111111111011101111, 0b00000000000011111111000000000000],
    [ 4,       0b00000000000111111111111011101111, 0b00000000000011111111100000000000],


  ], cmdline_opts )